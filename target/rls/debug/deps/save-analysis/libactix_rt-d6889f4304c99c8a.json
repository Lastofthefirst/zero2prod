{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0","program":"/Users/idealmine/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","actix_rt","--edition=2018","/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"actix-macros\"","--cfg","feature=\"default\"","--cfg","feature=\"macros\"","-C","metadata=d6889f4304c99c8a","-C","extra-filename=-d6889f4304c99c8a","--out-dir","/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps","-L","dependency=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps","--extern","actix_macros=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libactix_macros-12169864633c259b.dylib","--extern","futures_core=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libfutures_core-ebb528397f28c82e.rmeta","--extern","tokio=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libtokio-b5270e60b1d6b4db.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/idealmine/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libactix_rt-d6889f4304c99c8a.rmeta"},"prelude":{"crate_id":{"name":"actix_rt","disambiguator":[3933518137710577038,0]},"crate_root":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src","external_crates":[{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13397687447365136237,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12597453921046050400,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10337807943449432441,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15255728868105367331,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3332034203136216330,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4768259444744658338,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14770965832479625303,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9296703136347489161,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2508387316696144016,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11194842143487016821,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[677485867405505285,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11695788395232495118,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1893355350187676699,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4235596681029805678,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4025428084964080381,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[9641156662954966841,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3359352200029954805,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":18,"id":{"name":"tokio","disambiguator":[10393805683495535313,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":19,"id":{"name":"parking_lot","disambiguator":[3047272709825714418,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":20,"id":{"name":"instant","disambiguator":[4659142343281085837,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[9443989023123562313,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":22,"id":{"name":"lock_api","disambiguator":[11182842814633220718,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":23,"id":{"name":"scopeguard","disambiguator":[14847331154616209185,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":24,"id":{"name":"parking_lot_core","disambiguator":[17449917524273720858,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":25,"id":{"name":"smallvec","disambiguator":[9367324548293567865,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":26,"id":{"name":"libc","disambiguator":[4220857343285782581,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":27,"id":{"name":"mio","disambiguator":[6579771084501882176,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":28,"id":{"name":"log","disambiguator":[16489651671247969343,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":29,"id":{"name":"pin_project_lite","disambiguator":[15171946887197477454,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":30,"id":{"name":"bytes","disambiguator":[7924500713937243919,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":31,"id":{"name":"once_cell","disambiguator":[13887253023841858594,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":32,"id":{"name":"tokio_macros","disambiguator":[13799638000366192459,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":33,"id":{"name":"memchr","disambiguator":[1719484163645630851,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":34,"id":{"name":"num_cpus","disambiguator":[1328754573924586800,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":35,"id":{"name":"signal_hook_registry","disambiguator":[8065019648015092858,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","num":36,"id":{"name":"actix_macros","disambiguator":[10753537105546402909,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","num":37,"id":{"name":"futures_core","disambiguator":[7139768861018805285,0]}}],"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":0,"byte_end":6634,"line_start":1,"line_end":208,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":36,"index":9},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2302,"byte_end":2306,"line_start":59,"line_end":59,"column_start":23,"column_end":27},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":11},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2358,"byte_end":2362,"line_start":62,"line_end":62,"column_start":23,"column_end":27},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":355},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2428,"byte_end":2435,"line_start":68,"line_end":68,"column_start":25,"column_end":32},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":349},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2437,"byte_end":2450,"line_start":68,"line_end":68,"column_start":34,"column_end":47},"alias_span":null,"name":"ArbiterHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2476,"byte_end":2483,"line_start":69,"line_end":69,"column_start":24,"column_end":31},"alias_span":null,"name":"Runtime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":369},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2508,"byte_end":2514,"line_start":70,"line_end":70,"column_start":24,"column_end":30},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":377},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2516,"byte_end":2528,"line_start":70,"line_end":70,"column_start":32,"column_end":44},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":51},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2547,"byte_end":2550,"line_start":72,"line_end":72,"column_start":16,"column_end":19},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2755,"byte_end":2756,"line_start":80,"line_end":80,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":229}},{"kind":"Use","ref_id":{"krate":18,"index":8539},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2791,"byte_end":2797,"line_start":82,"line_end":82,"column_start":28,"column_end":34},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":228}},{"kind":"Use","ref_id":{"krate":18,"index":1584},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2987,"byte_end":2992,"line_start":94,"line_end":94,"column_start":24,"column_end":29},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":18,"index":5354},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3072,"byte_end":3081,"line_start":96,"line_end":96,"column_start":25,"column_end":34},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":18,"index":5297},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3108,"byte_end":3119,"line_start":97,"line_end":97,"column_start":26,"column_end":37},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":18,"index":5299},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3121,"byte_end":3130,"line_start":97,"line_end":97,"column_start":39,"column_end":48},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":18,"index":5343},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3132,"byte_end":3141,"line_start":97,"line_end":97,"column_start":50,"column_end":59},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":18,"index":6003},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3187,"byte_end":3199,"line_start":100,"line_end":100,"column_start":26,"column_end":38},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":18,"index":6013},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3201,"byte_end":3213,"line_start":100,"line_end":100,"column_start":40,"column_end":52},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":18,"index":6058},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3215,"byte_end":3225,"line_start":100,"line_end":100,"column_start":54,"column_end":64},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":234}},{"kind":"Use","ref_id":{"krate":18,"index":12618},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5273,"byte_end":5280,"line_start":159,"line_end":159,"column_start":26,"column_end":33},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":298}},{"kind":"Use","ref_id":{"krate":18,"index":12397},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5308,"byte_end":5316,"line_start":160,"line_end":160,"column_start":27,"column_end":35},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":298}},{"kind":"Use","ref_id":{"krate":18,"index":12398},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5318,"byte_end":5329,"line_start":160,"line_end":160,"column_start":37,"column_end":48},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":298}},{"kind":"Use","ref_id":{"krate":18,"index":12655},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5331,"byte_end":5339,"line_start":160,"line_end":160,"column_start":50,"column_end":58},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":298}},{"kind":"Use","ref_id":{"krate":18,"index":12150},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5368,"byte_end":5373,"line_start":161,"line_end":161,"column_start":27,"column_end":32},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":298}},{"kind":"Use","ref_id":{"krate":18,"index":12149},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5375,"byte_end":5386,"line_start":161,"line_end":161,"column_start":34,"column_end":45},"alias_span":null,"name":"sleep_until","value":"","parent":{"krate":0,"index":298}},{"kind":"Use","ref_id":{"krate":18,"index":13105},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5388,"byte_end":5393,"line_start":161,"line_end":161,"column_start":47,"column_end":52},"alias_span":null,"name":"Sleep","value":"","parent":{"krate":0,"index":298}},{"kind":"Use","ref_id":{"krate":18,"index":12467},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5422,"byte_end":5429,"line_start":162,"line_end":162,"column_start":27,"column_end":34},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":298}},{"kind":"Use","ref_id":{"krate":18,"index":13067},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5431,"byte_end":5438,"line_start":162,"line_end":162,"column_start":36,"column_end":43},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":298}},{"kind":"Use","ref_id":{"krate":18,"index":11833},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5530,"byte_end":5544,"line_start":168,"line_end":168,"column_start":27,"column_end":41},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":329}},{"kind":"Use","ref_id":{"krate":18,"index":11581},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5546,"byte_end":5555,"line_start":168,"line_end":168,"column_start":43,"column_end":52},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":329}},{"kind":"Use","ref_id":{"krate":18,"index":7064},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5557,"byte_end":5566,"line_start":168,"line_end":168,"column_start":54,"column_end":63},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":329}},{"kind":"Use","ref_id":{"krate":18,"index":7124},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5568,"byte_end":5578,"line_start":168,"line_end":168,"column_start":65,"column_end":75},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":329}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":0,"byte_end":6634,"line_start":1,"line_end":208,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":103},{"krate":0,"index":127},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":234},{"krate":0,"index":298},{"krate":0,"index":329},{"krate":0,"index":343}],"decl_id":null,"docs":" Tokio-based single-threaded async runtime for the Actix ecosystem.","sig":null,"attributes":[{"value":"/ Tokio-based single-threaded async runtime for the Actix ecosystem.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":0,"byte_end":70,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":71,"byte_end":74,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ In most parts of the the Actix ecosystem, it has been chosen to use !Send futures. For this","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":75,"byte_end":170,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ reason, a single-threaded runtime is appropriate since it is guaranteed that futures will not","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":171,"byte_end":268,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ be moved between threads. This can result in small performance improvements over cases where","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":269,"byte_end":365,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ atomics would otherwise be needed.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":366,"byte_end":404,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":405,"byte_end":408,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ To achieve similar performance to multi-threaded, work-stealing runtimes, applications","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":409,"byte_end":499,"line_start":8,"line_end":8,"column_start":1,"column_end":91}},{"value":"/ using `actix-rt` will create multiple, mostly disconnected, single-threaded runtimes.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":500,"byte_end":589,"line_start":9,"line_end":9,"column_start":1,"column_end":90}},{"value":"/ This approach has good performance characteristics for workloads where the majority of tasks","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":590,"byte_end":686,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ have similar runtime expense.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":687,"byte_end":720,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":721,"byte_end":724,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The disadvantage is that idle threads will not steal work from very busy, stuck or otherwise","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":725,"byte_end":821,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ backlogged threads. Tasks that are disproportionately expensive should be offloaded to the","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":822,"byte_end":916,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ blocking task thread-pool using [`task::spawn_blocking`].","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":917,"byte_end":978,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":979,"byte_end":982,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":983,"byte_end":997,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":998,"byte_end":1011,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ use std::sync::mpsc;","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1012,"byte_end":1036,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ use actix_rt::{Arbiter, System};","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1037,"byte_end":1073,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1074,"byte_end":1077,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let _ = System::new();","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1078,"byte_end":1104,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let (tx, rx) = mpsc::channel::<u32>();","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1109,"byte_end":1151,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1152,"byte_end":1155,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let arbiter = Arbiter::new();","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1156,"byte_end":1189,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ arbiter.spawn_fn(move || tx.send(42).unwrap());","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1190,"byte_end":1241,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1242,"byte_end":1245,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let num = rx.recv().unwrap();","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1246,"byte_end":1279,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(num, 42);","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1280,"byte_end":1304,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1305,"byte_end":1308,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ arbiter.stop();","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1309,"byte_end":1328,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ arbiter.join().unwrap();","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1329,"byte_end":1357,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1358,"byte_end":1365,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1366,"byte_end":1369,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # `io-uring` Support","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1370,"byte_end":1394,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"/ There is experimental support for using io-uring with this crate by enabling the","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1395,"byte_end":1479,"line_start":37,"line_end":37,"column_start":1,"column_end":85}},{"value":"/ `io-uring` feature. For now, it is semver exempt.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1480,"byte_end":1533,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1534,"byte_end":1537,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that there are currently some unimplemented parts of using `actix-rt` with `io-uring`.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1538,"byte_end":1633,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/ In particular, when running a `System`, only `System::block_on` is supported.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1634,"byte_end":1715,"line_start":41,"line_end":41,"column_start":1,"column_end":82}},{"value":"deny(rust_2018_idioms, nonstandard_style)","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1717,"byte_end":1762,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1763,"byte_end":1797,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":1798,"byte_end":1820,"line_start":45,"line_end":45,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":349},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":7534,"byte_end":7547,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"ArbiterHandle","qualname":"::arbiter::ArbiterHandle","value":"ArbiterHandle {  }","parent":null,"children":[{"krate":0,"index":350}],"decl_id":null,"docs":" A handle for sending spawn and stop messages to an [Arbiter].\n","sig":null,"attributes":[{"value":"/ A handle for sending spawn and stop messages to an [Arbiter].","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":7433,"byte_end":7498,"line_start":36,"line_end":36,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":7977,"byte_end":7982,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ArbiterHandle>::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> bool where Fut: Future<Output = ()> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Send a future to the [Arbiter]'s thread and spawn it.","sig":null,"attributes":[{"value":"/ Send a future to the [Arbiter]'s thread and spawn it.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":7727,"byte_end":7784,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":7789,"byte_end":7792,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If you require a result, include a response channel in the future.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":7797,"byte_end":7867,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":7872,"byte_end":7875,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Returns true if future was sent successfully and false if the [Arbiter] has died.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":7880,"byte_end":7965,"line_start":51,"line_end":51,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8501,"byte_end":8509,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"spawn_fn","qualname":"<ArbiterHandle>::spawn_fn","value":"pub fn spawn_fn<F>(&Self, F) -> bool where F: FnOnce() -> () + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a function to the [Arbiter]'s thread and execute it.","sig":null,"attributes":[{"value":"/ Send a function to the [Arbiter]'s thread and execute it.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8192,"byte_end":8253,"line_start":61,"line_end":61,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8258,"byte_end":8261,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Any result from the function is discarded. If you require a result, include a response","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8266,"byte_end":8356,"line_start":63,"line_end":63,"column_start":5,"column_end":95}},{"value":"/ channel in the function.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8361,"byte_end":8389,"line_start":64,"line_end":64,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8394,"byte_end":8397,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Returns true if function was sent successfully and false if the [Arbiter] has died.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8402,"byte_end":8489,"line_start":66,"line_end":66,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8823,"byte_end":8827,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"stop","qualname":"<ArbiterHandle>::stop","value":"pub fn stop(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Instruct [Arbiter] to stop processing it's event loop.","sig":null,"attributes":[{"value":"/ Instruct [Arbiter] to stop processing it's event loop.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8633,"byte_end":8691,"line_start":74,"line_end":74,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8696,"byte_end":8699,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Returns true if stop message was sent successfully and false if the [Arbiter] has","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8704,"byte_end":8789,"line_start":76,"line_end":76,"column_start":5,"column_end":90}},{"value":"/ been dropped.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8794,"byte_end":8811,"line_start":77,"line_end":77,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":355},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9149,"byte_end":9156,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"Arbiter","qualname":"::arbiter::Arbiter","value":"Arbiter {  }","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357}],"decl_id":null,"docs":" An Arbiter represents a thread that provides an asynchronous execution environment for futures\n and functions.","sig":null,"attributes":[{"value":"/ An Arbiter represents a thread that provides an asynchronous execution environment for futures","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":8905,"byte_end":9003,"line_start":83,"line_end":83,"column_start":1,"column_end":99}},{"value":"/ and functions.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9004,"byte_end":9022,"line_start":84,"line_end":84,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9023,"byte_end":9026,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ When an arbiter is created, it spawns a new [OS thread](thread), and hosts an event loop.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9027,"byte_end":9120,"line_start":86,"line_end":86,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9540,"byte_end":9543,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<Arbiter>::new","value":"pub fn new() -> Arbiter","parent":null,"children":[],"decl_id":null,"docs":" Spawn a new Arbiter thread and start its event loop.","sig":null,"attributes":[{"value":"/ Spawn a new Arbiter thread and start its event loop.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9271,"byte_end":9327,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9332,"byte_end":9335,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9340,"byte_end":9352,"line_start":96,"line_end":96,"column_start":5,"column_end":17}},{"value":"/ Panics if a [System] is not registered on the current thread.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9357,"byte_end":9422,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"cfg(not(all(target_os = \"linux\", feature = \"io-uring\")))","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9427,"byte_end":9486,"line_start":98,"line_end":98,"column_start":5,"column_end":64}},{"value":"allow(clippy :: new_without_default)","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9491,"byte_end":9528,"line_start":99,"line_end":99,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9971,"byte_end":9984,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"name":"with_tokio_rt","qualname":"<Arbiter>::with_tokio_rt","value":"pub fn with_tokio_rt<F>(F) -> Arbiter where F: Fn() ->\ntokio::runtime::Runtime + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a new Arbiter using the [Tokio Runtime](tokio-runtime) returned from a closure.","sig":null,"attributes":[{"value":"/ Spawn a new Arbiter using the [Tokio Runtime](tokio-runtime) returned from a closure.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9730,"byte_end":9819,"line_start":107,"line_end":107,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9824,"byte_end":9827,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [tokio-runtime]: tokio::runtime::Runtime","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9832,"byte_end":9876,"line_start":109,"line_end":109,"column_start":5,"column_end":49}},{"value":"cfg(not(all(target_os = \"linux\", feature = \"io-uring\")))","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9881,"byte_end":9940,"line_start":110,"line_end":110,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":13884,"byte_end":13890,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"handle","qualname":"<Arbiter>::handle","value":"pub fn handle(&Self) -> ArbiterHandle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the this Arbiter's message sender.\n","sig":null,"attributes":[{"value":"/ Return a handle to the this Arbiter's message sender.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":13815,"byte_end":13872,"line_start":227,"line_end":227,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14141,"byte_end":14148,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"current","qualname":"<Arbiter>::current","value":"pub fn current() -> ArbiterHandle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the current thread's Arbiter's message sender.","sig":null,"attributes":[{"value":"/ Return a handle to the current thread's Arbiter's message sender.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":13972,"byte_end":14041,"line_start":232,"line_end":232,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14046,"byte_end":14049,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14054,"byte_end":14066,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/ Panics if no Arbiter is running on the current thread.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14071,"byte_end":14129,"line_start":235,"line_end":235,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14530,"byte_end":14541,"line_start":248,"line_end":248,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Arbiter>::try_current","value":"pub fn try_current() -> Option<ArbiterHandle>","parent":null,"children":[],"decl_id":null,"docs":" Try to get current running arbiter handle.","sig":null,"attributes":[{"value":"/ Try to get current running arbiter handle.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14339,"byte_end":14385,"line_start":243,"line_end":243,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14390,"byte_end":14393,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no Arbiter has been started.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14398,"byte_end":14448,"line_start":245,"line_end":245,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14453,"byte_end":14456,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Unlike [`current`](Self::current), this never panics.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14461,"byte_end":14518,"line_start":247,"line_end":247,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14803,"byte_end":14807,"line_start":255,"line_end":255,"column_start":12,"column_end":16},"name":"stop","qualname":"<Arbiter>::stop","value":"pub fn stop(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Stop Arbiter from continuing it's event loop.","sig":null,"attributes":[{"value":"/ Stop Arbiter from continuing it's event loop.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14632,"byte_end":14681,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14686,"byte_end":14689,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ Returns true if stop message was sent successfully and false if the Arbiter has been dropped.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14694,"byte_end":14791,"line_start":254,"line_end":254,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15133,"byte_end":15138,"line_start":264,"line_end":264,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Arbiter>::spawn","value":"pub fn spawn<Fut>(&Self, Fut) -> bool where Fut: Future<Output = ()> + Send +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Send a future to the Arbiter's thread and spawn it.","sig":null,"attributes":[{"value":"/ Send a future to the Arbiter's thread and spawn it.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14887,"byte_end":14942,"line_start":259,"line_end":259,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14947,"byte_end":14950,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ If you require a result, include a response channel in the future.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":14955,"byte_end":15025,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15030,"byte_end":15033,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Returns true if future was sent successfully and false if the Arbiter has died.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15038,"byte_end":15121,"line_start":263,"line_end":263,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15653,"byte_end":15661,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"spawn_fn","qualname":"<Arbiter>::spawn_fn","value":"pub fn spawn_fn<F>(&Self, F) -> bool where F: FnOnce() -> () + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Send a function to the Arbiter's thread and execute it.","sig":null,"attributes":[{"value":"/ Send a function to the Arbiter's thread and execute it.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15348,"byte_end":15407,"line_start":273,"line_end":273,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15412,"byte_end":15415,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Any result from the function is discarded. If you require a result, include a response","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15420,"byte_end":15510,"line_start":275,"line_end":275,"column_start":5,"column_end":95}},{"value":"/ channel in the function.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15515,"byte_end":15543,"line_start":276,"line_end":276,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15548,"byte_end":15551,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Returns true if function was sent successfully and false if the Arbiter has died.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15556,"byte_end":15641,"line_start":278,"line_end":278,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15950,"byte_end":15954,"line_start":289,"line_end":289,"column_start":12,"column_end":16},"name":"join","qualname":"<Arbiter>::join","value":"pub fn join(Self) -> thread::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for Arbiter's event loop to complete.","sig":null,"attributes":[{"value":"/ Wait for Arbiter's event loop to complete.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15785,"byte_end":15831,"line_start":286,"line_end":286,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15836,"byte_end":15839,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Joins the underlying OS thread handle. See [`JoinHandle::join`](thread::JoinHandle::join).","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":15844,"byte_end":15938,"line_start":288,"line_end":288,"column_start":5,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17217,"byte_end":17224,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"decl_id":null,"docs":" A Tokio-based runtime proxy.","sig":null,"attributes":[{"value":"/ A Tokio-based runtime proxy.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17026,"byte_end":17058,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17059,"byte_end":17062,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ All spawned futures will be executed on the current thread. Therefore, there is no `Send` bound","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17063,"byte_end":17162,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ on submitted futures.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17163,"byte_end":17188,"line_start":8,"line_end":8,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17618,"byte_end":17621,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime initialized with default configuration values.\n","sig":null,"attributes":[{"value":"/ Returns a new runtime initialized with default configuration values.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17496,"byte_end":17568,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17573,"byte_end":17606,"line_start":24,"line_end":24,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18510,"byte_end":18515,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + 'static","parent":null,"children":[],"decl_id":null,"docs":" Offload a future onto the single-threaded runtime.","sig":null,"attributes":[{"value":"/ Offload a future onto the single-threaded runtime.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17785,"byte_end":17839,"line_start":34,"line_end":34,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17844,"byte_end":17847,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The returned join handle can be used to await the future's result.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17852,"byte_end":17922,"line_start":36,"line_end":36,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17927,"byte_end":17930,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See [crate root][crate] documentation for more details.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17935,"byte_end":17994,"line_start":38,"line_end":38,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17999,"byte_end":18002,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18007,"byte_end":18021,"line_start":40,"line_end":40,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18026,"byte_end":18033,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ let rt = actix_rt::Runtime::new().unwrap();","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18038,"byte_end":18085,"line_start":42,"line_end":42,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18090,"byte_end":18093,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18098,"byte_end":18136,"line_start":44,"line_end":44,"column_start":5,"column_end":43}},{"value":"/ let handle = rt.spawn(async {","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18141,"byte_end":18174,"line_start":45,"line_end":45,"column_start":5,"column_end":38}},{"value":"/     println!(\"running on the runtime\");","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18179,"byte_end":18222,"line_start":46,"line_end":46,"column_start":5,"column_end":48}},{"value":"/     42","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18227,"byte_end":18237,"line_start":47,"line_end":47,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18242,"byte_end":18249,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18254,"byte_end":18257,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rt.block_on(handle).unwrap(), 42);","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18262,"byte_end":18311,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18316,"byte_end":18323,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18328,"byte_end":18331,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18336,"byte_end":18348,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/ This function panics if the spawn fails. Failure occurs if the executor is currently at","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18353,"byte_end":18444,"line_start":54,"line_end":54,"column_start":5,"column_end":96}},{"value":"/ capacity and is unable to spawn a new future.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18449,"byte_end":18498,"line_start":55,"line_end":55,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":19498,"byte_end":19506,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F>(&Self, F) -> F::Output where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided future, blocking the current thread until the future completes.","sig":null,"attributes":[{"value":"/ Runs the provided future, blocking the current thread until the future completes.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18657,"byte_end":18742,"line_start":63,"line_end":63,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18747,"byte_end":18750,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function can be used to synchronously block the current thread until the provided","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18755,"byte_end":18845,"line_start":65,"line_end":65,"column_start":5,"column_end":95}},{"value":"/ `future` has resolved either successfully or with an error. The result of the future is","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18850,"byte_end":18941,"line_start":66,"line_end":66,"column_start":5,"column_end":96}},{"value":"/ then returned from this function call.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18946,"byte_end":18988,"line_start":67,"line_end":67,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":18993,"byte_end":18996,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Note that this function will also execute any spawned futures on the current thread, but","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":19001,"byte_end":19093,"line_start":69,"line_end":69,"column_start":5,"column_end":97}},{"value":"/ will not block until these other spawned futures have completed. Once the function returns,","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":19098,"byte_end":19193,"line_start":70,"line_end":70,"column_start":5,"column_end":100}},{"value":"/ any uncompleted futures remain pending in the `Runtime` instance. These futures will not run","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":19198,"byte_end":19294,"line_start":71,"line_end":71,"column_start":5,"column_end":101}},{"value":"/ until `block_on` or `run` is called again.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":19299,"byte_end":19345,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":19350,"byte_end":19353,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that other spawned futures complete execution by","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":19358,"byte_end":19449,"line_start":74,"line_end":74,"column_start":5,"column_end":96}},{"value":"/ calling `block_on` or `run`.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":19454,"byte_end":19486,"line_start":75,"line_end":75,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":20321,"byte_end":20327,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"System","qualname":"::system::System","value":"System {  }","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372}],"decl_id":null,"docs":" A manager for a per-thread distributed async runtime.\n","sig":null,"attributes":[{"value":"/ A manager for a per-thread distributed async runtime.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":20228,"byte_end":20285,"line_start":22,"line_end":22,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":20719,"byte_end":20722,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<System>::new","value":"pub fn new() -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create a new system.","sig":null,"attributes":[{"value":"/ Create a new system.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":20557,"byte_end":20581,"line_start":34,"line_end":34,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":20586,"byte_end":20589,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":20594,"byte_end":20606,"line_start":36,"line_end":36,"column_start":5,"column_end":17}},{"value":"/ Panics if underlying Tokio runtime can not be created.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":20611,"byte_end":20669,"line_start":37,"line_end":37,"column_start":5,"column_end":63}},{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":20674,"byte_end":20707,"line_start":38,"line_end":38,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":21106,"byte_end":21119,"line_start":50,"line_end":50,"column_start":12,"column_end":25},"name":"with_tokio_rt","qualname":"<System>::with_tokio_rt","value":"pub fn with_tokio_rt<F>(F) -> SystemRunner where F: Fn() ->\ntokio::runtime::Runtime","parent":null,"children":[],"decl_id":null,"docs":" Create a new System using the [Tokio Runtime](tokio-runtime) returned from a closure.","sig":null,"attributes":[{"value":"/ Create a new System using the [Tokio Runtime](tokio-runtime) returned from a closure.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":20929,"byte_end":21018,"line_start":46,"line_end":46,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":21023,"byte_end":21026,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ [tokio-runtime]: tokio::runtime::Runtime","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":21031,"byte_end":21075,"line_start":48,"line_end":48,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23066,"byte_end":23073,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"current","qualname":"<System>::current","value":"pub fn current() -> System","parent":null,"children":[],"decl_id":null,"docs":" Get current running system.","sig":null,"attributes":[{"value":"/ Get current running system.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":22933,"byte_end":22964,"line_start":114,"line_end":114,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":22969,"byte_end":22972,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":22977,"byte_end":22989,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/ Panics if no system is registered on the current thread.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":22994,"byte_end":23054,"line_start":117,"line_end":117,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23438,"byte_end":23449,"line_start":130,"line_end":130,"column_start":12,"column_end":23},"name":"try_current","qualname":"<System>::try_current","value":"pub fn try_current() -> Option<System>","parent":null,"children":[],"decl_id":null,"docs":" Try to get current running system.","sig":null,"attributes":[{"value":"/ Try to get current running system.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23256,"byte_end":23294,"line_start":125,"line_end":125,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23299,"byte_end":23302,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no System has been started.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23307,"byte_end":23356,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23361,"byte_end":23364,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Unlike [`current`](Self::current), this never panics.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23369,"byte_end":23426,"line_start":129,"line_end":129,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23597,"byte_end":23604,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"arbiter","qualname":"<System>::arbiter","value":"pub fn arbiter(&Self) -> &ArbiterHandle","parent":null,"children":[],"decl_id":null,"docs":" Get handle to a the System's initial [Arbiter].\n","sig":null,"attributes":[{"value":"/ Get handle to a the System's initial [Arbiter].","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23534,"byte_end":23585,"line_start":134,"line_end":134,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23748,"byte_end":23761,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"is_registered","qualname":"<System>::is_registered","value":"pub fn is_registered() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if there is a System registered on the current thread.\n","sig":null,"attributes":[{"value":"/ Check if there is a System registered on the current thread.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23672,"byte_end":23736,"line_start":139,"line_end":139,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23911,"byte_end":23922,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"set_current","qualname":"<System>::set_current","value":"pub fn set_current(System)","parent":null,"children":[],"decl_id":null,"docs":" Register given system on current thread.\n","sig":null,"attributes":[{"value":"/ Register given system on current thread.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":23836,"byte_end":23880,"line_start":144,"line_end":144,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24128,"byte_end":24130,"line_start":155,"line_end":155,"column_start":12,"column_end":14},"name":"id","qualname":"<System>::id","value":"pub fn id(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Numeric system identifier.","sig":null,"attributes":[{"value":"/ Numeric system identifier.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24034,"byte_end":24064,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24069,"byte_end":24072,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Useful when using multiple Systems.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24077,"byte_end":24116,"line_start":154,"line_end":154,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24222,"byte_end":24226,"line_start":160,"line_end":160,"column_start":12,"column_end":16},"name":"stop","qualname":"<System>::stop","value":"pub fn stop(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop the system (with code 0).\n","sig":null,"attributes":[{"value":"/ Stop the system (with code 0).","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24176,"byte_end":24210,"line_start":159,"line_end":159,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24333,"byte_end":24347,"line_start":165,"line_end":165,"column_start":12,"column_end":26},"name":"stop_with_code","qualname":"<System>::stop_with_code","value":"pub fn stop_with_code(&Self, i32)","parent":null,"children":[],"decl_id":null,"docs":" Stop the system with a given exit code.\n","sig":null,"attributes":[{"value":"/ Stop the system with a given exit code.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24278,"byte_end":24321,"line_start":164,"line_end":164,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":377},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24751,"byte_end":24763,"line_start":178,"line_end":178,"column_start":12,"column_end":24},"name":"SystemRunner","qualname":"::system::SystemRunner","value":"SystemRunner {  }","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"decl_id":null,"docs":" Runner that keeps a [System]'s event loop alive until stop message is received.\n","sig":null,"attributes":[{"value":"/ Runner that keeps a [System]'s event loop alive until stop message is received.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24537,"byte_end":24620,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"cfg(not(feature = \"io-uring\"))","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24621,"byte_end":24654,"line_start":175,"line_end":175,"column_start":1,"column_end":34}},{"value":"must_use = \"A SystemRunner does nothing unless `run` is called.\"","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24655,"byte_end":24722,"line_start":176,"line_end":176,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24988,"byte_end":24991,"line_start":186,"line_end":186,"column_start":12,"column_end":15},"name":"run","qualname":"<SystemRunner>::run","value":"pub fn run(Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Starts event loop and will return once [System] is [stopped](System::stop).\n","sig":null,"attributes":[{"value":"/ Starts event loop and will return once [System] is [stopped](System::stop).","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24897,"byte_end":24976,"line_start":185,"line_end":185,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":25396,"byte_end":25409,"line_start":199,"line_end":199,"column_start":12,"column_end":25},"name":"run_with_code","qualname":"<SystemRunner>::run_with_code","value":"pub fn run_with_code(Self) -> io::Result<i32>","parent":null,"children":[],"decl_id":null,"docs":" Runs the event loop until [stopped](System::stop_with_code), returning the exit code.\n","sig":null,"attributes":[{"value":"/ Runs the event loop until [stopped](System::stop_with_code), returning the exit code.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":25295,"byte_end":25384,"line_start":198,"line_end":198,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":25732,"byte_end":25740,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"block_on","qualname":"<SystemRunner>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided future, blocking the current thread until the future completes.\n","sig":null,"attributes":[{"value":"/ Runs the provided future, blocking the current thread until the future completes.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":25621,"byte_end":25706,"line_start":207,"line_end":207,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":25711,"byte_end":25720,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":228},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2561,"byte_end":2567,"line_start":74,"line_end":74,"column_start":9,"column_end":15},"name":"signal","qualname":"::signal","value":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":231}],"decl_id":null,"docs":" Asynchronous signal handling (Tokio re-exports).\n","sig":null,"attributes":[{"value":"/ Asynchronous signal handling (Tokio re-exports).","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2574,"byte_end":2626,"line_start":75,"line_end":75,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":229},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2657,"byte_end":2661,"line_start":78,"line_end":78,"column_start":13,"column_end":17},"name":"unix","qualname":"::signal::unix","value":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":230}],"decl_id":null,"docs":" Unix specific signals (Tokio re-exports).\n","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2632,"byte_end":2644,"line_start":77,"line_end":77,"column_start":5,"column_end":17}},{"value":"/ Unix specific signals (Tokio re-exports).","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2672,"byte_end":2717,"line_start":79,"line_end":79,"column_start":9,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":234},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2810,"byte_end":2813,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"name":"net","qualname":"::net","value":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294}],"decl_id":null,"docs":" TCP/UDP/Unix bindings (mostly Tokio re-exports).\n","sig":null,"attributes":[{"value":"/ TCP/UDP/Unix bindings (mostly Tokio re-exports).","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":2820,"byte_end":2872,"line_start":86,"line_end":86,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":285},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3346,"byte_end":3357,"line_start":104,"line_end":104,"column_start":15,"column_end":26},"name":"ActixStream","qualname":"::net::ActixStream","value":"ActixStream: AsyncRead + AsyncWrite + Unpin","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"decl_id":null,"docs":" Extension trait over async read+write types that can also signal readiness.\n","sig":null,"attributes":[{"value":"/ Extension trait over async read+write types that can also signal readiness.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3233,"byte_end":3312,"line_start":102,"line_end":102,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3558,"byte_end":3573,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"::net::ActixStream::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<Ready>>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Poll stream and check read readiness of Self.","sig":null,"attributes":[{"value":"/ Poll stream and check read readiness of Self.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3400,"byte_end":3449,"line_start":105,"line_end":105,"column_start":9,"column_end":58}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3458,"byte_end":3461,"line_start":106,"line_end":106,"column_start":9,"column_end":12}},{"value":"/ See [tokio::net::TcpStream::poll_read_ready] for detail on intended use.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3470,"byte_end":3546,"line_start":107,"line_end":107,"column_start":9,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3800,"byte_end":3816,"line_start":113,"line_end":113,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"::net::ActixStream::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<Ready>>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Poll stream and check write readiness of Self.","sig":null,"attributes":[{"value":"/ Poll stream and check write readiness of Self.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3640,"byte_end":3690,"line_start":110,"line_end":110,"column_start":9,"column_end":59}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3699,"byte_end":3702,"line_start":111,"line_end":111,"column_start":9,"column_end":12}},{"value":"/ See [tokio::net::TcpStream::poll_write_ready] for detail on intended use.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3711,"byte_end":3788,"line_start":112,"line_end":112,"column_start":9,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":298},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5184,"byte_end":5188,"line_start":156,"line_end":156,"column_start":9,"column_end":13},"name":"time","qualname":"::time","value":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":326}],"decl_id":null,"docs":" Utilities for tracking time (Tokio re-exports).\n","sig":null,"attributes":[{"value":"/ Utilities for tracking time (Tokio re-exports).","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5195,"byte_end":5246,"line_start":157,"line_end":157,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":329},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5452,"byte_end":5456,"line_start":165,"line_end":165,"column_start":9,"column_end":13},"name":"task","qualname":"::task","value":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340}],"decl_id":null,"docs":" Task management (Tokio re-exports).\n","sig":null,"attributes":[{"value":"/ Task management (Tokio re-exports).","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5463,"byte_end":5502,"line_start":166,"line_end":166,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":343},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6494,"byte_end":6499,"line_start":202,"line_end":202,"column_start":8,"column_end":13},"name":"spawn","qualname":"::spawn","value":"pub fn spawn<Fut>(Fut) -> JoinHandle<Fut::Output> where Fut: Future + 'static,\nFut::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future on the current thread as a new task.","sig":null,"attributes":[{"value":"/ Spawns a future on the current thread as a new task.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5584,"byte_end":5640,"line_start":171,"line_end":171,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5641,"byte_end":5644,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ If not immediately awaited, the task can be cancelled using [`JoinHandle::abort`].","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5645,"byte_end":5731,"line_start":173,"line_end":173,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5732,"byte_end":5735,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ The provided future is spawned as a new task; therefore, panics are caught.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5736,"byte_end":5815,"line_start":175,"line_end":175,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5816,"byte_end":5819,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5820,"byte_end":5832,"line_start":177,"line_end":177,"column_start":1,"column_end":13}},{"value":"/ Panics if Actix system is not running.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5833,"byte_end":5875,"line_start":178,"line_end":178,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5876,"byte_end":5879,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5880,"byte_end":5894,"line_start":180,"line_end":180,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5895,"byte_end":5902,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5903,"byte_end":5933,"line_start":182,"line_end":182,"column_start":1,"column_end":31}},{"value":"/ # actix_rt::Runtime::new().unwrap().block_on(async {","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5934,"byte_end":5990,"line_start":183,"line_end":183,"column_start":1,"column_end":57}},{"value":"/ // task resolves successfully","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":5991,"byte_end":6024,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(actix_rt::spawn(async { 1 }).await.unwrap(), 1);","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6025,"byte_end":6088,"line_start":185,"line_end":185,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6089,"byte_end":6092,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ // task panics","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6093,"byte_end":6111,"line_start":187,"line_end":187,"column_start":1,"column_end":19}},{"value":"/ assert!(actix_rt::spawn(async {","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6112,"byte_end":6147,"line_start":188,"line_end":188,"column_start":1,"column_end":36}},{"value":"/     panic!(\"panic is caught at task boundary\");","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6148,"byte_end":6199,"line_start":189,"line_end":189,"column_start":1,"column_end":52}},{"value":"/ })","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6200,"byte_end":6206,"line_start":190,"line_end":190,"column_start":1,"column_end":7}},{"value":"/ .await","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6207,"byte_end":6217,"line_start":191,"line_end":191,"column_start":1,"column_end":11}},{"value":"/ .unwrap_err()","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6218,"byte_end":6235,"line_start":192,"line_end":192,"column_start":1,"column_end":18}},{"value":"/ .is_panic());","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6236,"byte_end":6253,"line_start":193,"line_end":193,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6254,"byte_end":6257,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ // task is cancelled before completion","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6258,"byte_end":6300,"line_start":195,"line_end":195,"column_start":1,"column_end":43}},{"value":"/ let handle = actix_rt::spawn(actix_rt::time::sleep(Duration::from_secs(100)));","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6301,"byte_end":6383,"line_start":196,"line_end":196,"column_start":1,"column_end":83}},{"value":"/ handle.abort();","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6384,"byte_end":6403,"line_start":197,"line_end":197,"column_start":1,"column_end":20}},{"value":"/ assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6404,"byte_end":6458,"line_start":198,"line_end":198,"column_start":1,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6459,"byte_end":6468,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6469,"byte_end":6476,"line_start":200,"line_end":200,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":6477,"byte_end":6486,"line_start":201,"line_end":201,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":7162,"byte_end":7176,"line_start":27,"line_end":27,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":7605,"byte_end":7618,"line_start":42,"line_end":42,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9257,"byte_end":9264,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":16178,"byte_end":16191,"line_start":299,"line_end":299,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17482,"byte_end":17489,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":19660,"byte_end":19667,"line_start":84,"line_end":84,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":20544,"byte_end":20550,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":22502,"byte_end":22508,"line_start":97,"line_end":97,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24878,"byte_end":24890,"line_start":184,"line_end":184,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":27949,"byte_end":27965,"line_start":276,"line_end":276,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":28269,"byte_end":28285,"line_start":289,"line_end":289,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3906,"byte_end":3915,"line_start":116,"line_end":116,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":4389,"byte_end":4399,"line_start":131,"line_end":131,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":4882,"byte_end":4885,"line_start":145,"line_end":145,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":7162,"byte_end":7176,"line_start":27,"line_end":27,"column_start":21,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":60},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":7605,"byte_end":7618,"line_start":42,"line_end":42,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":9257,"byte_end":9264,"line_start":93,"line_end":93,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/arbiter.rs","byte_start":16178,"byte_end":16191,"line_start":299,"line_end":299,"column_start":17,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":12613}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":17482,"byte_end":17489,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/runtime.rs","byte_start":19660,"byte_end":19667,"line_start":84,"line_end":84,"column_start":40,"column_end":47},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":360},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":20544,"byte_end":20550,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":22502,"byte_end":22508,"line_start":97,"line_end":97,"column_start":6,"column_end":12},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":24878,"byte_end":24890,"line_start":184,"line_end":184,"column_start":6,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":27949,"byte_end":27965,"line_start":276,"line_end":276,"column_start":6,"column_end":22},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/system.rs","byte_start":28269,"byte_end":28285,"line_start":289,"line_end":289,"column_start":17,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":395},"to":{"krate":2,"index":12613}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3359,"byte_end":3368,"line_start":104,"line_end":104,"column_start":28,"column_end":37},"kind":"SuperTrait","from":{"krate":18,"index":227},"to":{"krate":0,"index":285}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3371,"byte_end":3381,"line_start":104,"line_end":104,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":18,"index":306},"to":{"krate":0,"index":285}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3384,"byte_end":3389,"line_start":104,"line_end":104,"column_start":53,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":3045},"to":{"krate":0,"index":285}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":3906,"byte_end":3915,"line_start":116,"line_end":116,"column_start":26,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":18,"index":5343},"to":{"krate":0,"index":285}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":4389,"byte_end":4399,"line_start":131,"line_end":131,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":18,"index":6058},"to":{"krate":0,"index":285}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-2.5.0/src/lib.rs","byte_start":4882,"byte_end":4885,"line_start":145,"line_end":145,"column_start":52,"column_end":55},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":285}}]}
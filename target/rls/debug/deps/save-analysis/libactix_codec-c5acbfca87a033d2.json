{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1","program":"/Users/idealmine/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","actix_codec","--edition=2018","/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=c5acbfca87a033d2","-C","extra-filename=-c5acbfca87a033d2","--out-dir","/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps","-L","dependency=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps","--extern","bitflags=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libbitflags-86dc1aff262bcdc8.rmeta","--extern","bytes=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libbytes-b245131b95aead68.rmeta","--extern","futures_core=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libfutures_core-ebb528397f28c82e.rmeta","--extern","futures_sink=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libfutures_sink-a8aab76f62b0f98f.rmeta","--extern","log=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/liblog-4b24e6750c466469.rmeta","--extern","memchr=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libmemchr-bc6a922f72d56cd8.rmeta","--extern","pin_project_lite=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libpin_project_lite-703c8f1511d632e8.rmeta","--extern","tokio=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libtokio-b5270e60b1d6b4db.rmeta","--extern","tokio_util=/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libtokio_util-50c217e3ecfd16a0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/idealmine/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/idealmine/Desktop/projects/zero2prod/target/rls/debug/deps/libactix_codec-c5acbfca87a033d2.rmeta"},"prelude":{"crate_id":{"name":"actix_codec","disambiguator":[16468114281013357066,0]},"crate_root":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src","external_crates":[{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13397687447365136237,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[12597453921046050400,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10337807943449432441,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15255728868105367331,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3332034203136216330,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4768259444744658338,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14770965832479625303,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9296703136347489161,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2508387316696144016,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11194842143487016821,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[677485867405505285,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[11695788395232495118,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[1893355350187676699,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[4235596681029805678,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[4025428084964080381,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[9641156662954966841,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3359352200029954805,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/bcodec.rs","num":18,"id":{"name":"bytes","disambiguator":[7924500713937243919,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","num":19,"id":{"name":"futures_core","disambiguator":[7139768861018805285,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","num":20,"id":{"name":"futures_sink","disambiguator":[7117066977141630721,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lines.rs","num":21,"id":{"name":"memchr","disambiguator":[1719484163645630851,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":22,"id":{"name":"tokio","disambiguator":[10393805683495535313,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":23,"id":{"name":"parking_lot","disambiguator":[3047272709825714418,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":24,"id":{"name":"instant","disambiguator":[4659142343281085837,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":25,"id":{"name":"cfg_if","disambiguator":[9443989023123562313,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":26,"id":{"name":"lock_api","disambiguator":[11182842814633220718,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":27,"id":{"name":"scopeguard","disambiguator":[14847331154616209185,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":28,"id":{"name":"parking_lot_core","disambiguator":[17449917524273720858,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":29,"id":{"name":"smallvec","disambiguator":[9367324548293567865,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":30,"id":{"name":"libc","disambiguator":[4220857343285782581,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":31,"id":{"name":"mio","disambiguator":[6579771084501882176,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","num":32,"id":{"name":"log","disambiguator":[16489651671247969343,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","num":33,"id":{"name":"pin_project_lite","disambiguator":[15171946887197477454,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":34,"id":{"name":"once_cell","disambiguator":[13887253023841858594,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":35,"id":{"name":"tokio_macros","disambiguator":[13799638000366192459,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":36,"id":{"name":"num_cpus","disambiguator":[1328754573924586800,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":37,"id":{"name":"signal_hook_registry","disambiguator":[8065019648015092858,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","num":38,"id":{"name":"tokio_util","disambiguator":[17414061545886749551,0]}},{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","num":39,"id":{"name":"bitflags","disambiguator":[17784571651271876949,0]}}],"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":0,"byte_end":824,"line_start":1,"line_end":25,"column_start":1,"column_end":39}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":214},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":595,"byte_end":605,"line_start":19,"line_end":19,"column_start":23,"column_end":33},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":595,"byte_end":605,"line_start":19,"line_end":19,"column_start":23,"column_end":33},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":313},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":630,"byte_end":636,"line_start":20,"line_end":20,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":638,"byte_end":649,"line_start":20,"line_end":20,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":382},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":673,"byte_end":683,"line_start":21,"line_end":21,"column_start":22,"column_end":32},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":383},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":673,"byte_end":683,"line_start":21,"line_end":21,"column_start":22,"column_end":32},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":227},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":706,"byte_end":715,"line_start":23,"line_end":23,"column_start":21,"column_end":30},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":306},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":717,"byte_end":727,"line_start":23,"line_end":23,"column_start":32,"column_end":42},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":370},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":729,"byte_end":736,"line_start":23,"line_end":23,"column_start":44,"column_end":51},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":38,"index":562},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":767,"byte_end":774,"line_start":24,"line_end":24,"column_start":29,"column_end":36},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":38,"index":579},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":776,"byte_end":783,"line_start":24,"line_end":24,"column_start":38,"column_end":45},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":38,"index":503},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":810,"byte_end":823,"line_start":25,"line_end":25,"column_start":25,"column_end":38},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":0,"byte_end":824,"line_start":1,"line_end":25,"column_start":1,"column_end":39},"name":"","qualname":"::","value":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":31},{"krate":0,"index":143},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211}],"decl_id":null,"docs":" Codec utilities for working with framed protocols.","sig":null,"attributes":[{"value":"/ Codec utilities for working with framed protocols.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":55,"byte_end":58,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":59,"byte_end":127,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":128,"byte_end":203,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as `transports`.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":204,"byte_end":254,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":255,"byte_end":258,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":259,"byte_end":291,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":292,"byte_end":328,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"deny(rust_2018_idioms, nonstandard_style, future_incompatible)","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":330,"byte_end":396,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lib.rs","byte_start":397,"byte_end":419,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":214},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/bcodec.rs","byte_start":1010,"byte_end":1020,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::bcodec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" Bytes codec. Reads/writes chunks of bytes from a stream.\n","sig":null,"attributes":[{"value":"/ Bytes codec. Reads/writes chunks of bytes from a stream.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/bcodec.rs","byte_start":908,"byte_end":968,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":2560,"byte_end":2566,"line_start":31,"line_end":31,"column_start":16,"column_end":22},"name":"Framed","qualname":"::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying I/O object, using the `Encoder` and\n `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3055,"byte_end":3058,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" This function returns a *single* object that is both `Stream` and `Sink`; grouping this into\n a single object is often useful for layering things like gzip or TLS, which require both\n read and write access to the underlying object.\n","sig":null,"attributes":[{"value":"/ This function returns a *single* object that is both `Stream` and `Sink`; grouping this into","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":2794,"byte_end":2890,"line_start":46,"line_end":46,"column_start":5,"column_end":101}},{"value":"/ a single object is often useful for layering things like gzip or TLS, which require both","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":2895,"byte_end":2987,"line_start":47,"line_end":47,"column_start":5,"column_end":97}},{"value":"/ read and write access to the underlying object.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":2992,"byte_end":3043,"line_start":48,"line_end":48,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3393,"byte_end":3402,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"codec_ref","qualname":"<Framed<T, U>>::codec_ref","value":"pub fn codec_ref(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3333,"byte_end":3381,"line_start":61,"line_end":61,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3517,"byte_end":3526,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3449,"byte_end":3505,"line_start":66,"line_end":66,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3851,"byte_end":3857,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"io_ref","qualname":"<Framed<T, U>>::io_ref","value":"pub fn io_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by `Frame`.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3585,"byte_end":3657,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3662,"byte_end":3665,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream of data coming in as","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3670,"byte_end":3766,"line_start":73,"line_end":73,"column_start":5,"column_end":101}},{"value":"/ it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3771,"byte_end":3839,"line_start":74,"line_end":74,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4156,"byte_end":4162,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"io_mut","qualname":"<Framed<T, U>>::io_mut","value":"pub fn io_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3901,"byte_end":3962,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3967,"byte_end":3970,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream of data coming in as","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3975,"byte_end":4071,"line_start":81,"line_end":81,"column_start":5,"column_end":101}},{"value":"/ it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4076,"byte_end":4144,"line_start":82,"line_end":82,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4302,"byte_end":4308,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"io_pin","qualname":"<Framed<T, U>>::io_pin","value":"pub fn io_pin(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Pin` of a mutable reference to the underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Returns a `Pin` of a mutable reference to the underlying I/O stream.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4218,"byte_end":4290,"line_start":87,"line_end":87,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4431,"byte_end":4448,"line_start":93,"line_end":93,"column_start":12,"column_end":29},"name":"is_read_buf_empty","qualname":"<Framed<T, U>>::is_read_buf_empty","value":"pub fn is_read_buf_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if read buffer is empty.\n","sig":null,"attributes":[{"value":"/ Check if read buffer is empty.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4385,"byte_end":4419,"line_start":92,"line_end":92,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4557,"byte_end":4575,"line_start":98,"line_end":98,"column_start":12,"column_end":30},"name":"is_write_buf_empty","qualname":"<Framed<T, U>>::is_write_buf_empty","value":"pub fn is_write_buf_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if write buffer is empty.\n","sig":null,"attributes":[{"value":"/ Check if write buffer is empty.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4510,"byte_end":4545,"line_start":97,"line_end":97,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4684,"byte_end":4701,"line_start":103,"line_end":103,"column_start":12,"column_end":29},"name":"is_write_buf_full","qualname":"<Framed<T, U>>::is_write_buf_full","value":"pub fn is_write_buf_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if write buffer is full.\n","sig":null,"attributes":[{"value":"/ Check if write buffer is full.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4638,"byte_end":4672,"line_start":102,"line_end":102,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4912,"byte_end":4926,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"is_write_ready","qualname":"<Framed<T, U>>::is_write_ready","value":"pub fn is_write_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if framed is able to write more data.","sig":null,"attributes":[{"value":"/ Check if framed is able to write more data.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4765,"byte_end":4812,"line_start":107,"line_end":107,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4817,"byte_end":4820,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ `Framed` object considers ready if there is free space in write buffer.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4825,"byte_end":4900,"line_start":109,"line_end":109,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":5065,"byte_end":5078,"line_start":115,"line_end":115,"column_start":12,"column_end":25},"name":"replace_codec","qualname":"<Framed<T, U>>::replace_codec","value":"pub fn replace_codec<U2>(Self, U2) -> Framed<T, U2>","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Frame`, returning `Frame` with different codec.\n","sig":null,"attributes":[{"value":"/ Consume the `Frame`, returning `Frame` with different codec.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":4989,"byte_end":5053,"line_start":114,"line_end":114,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":5381,"byte_end":5392,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"into_map_io","qualname":"<Framed<T, U>>::into_map_io","value":"pub fn into_map_io<F, T2>(Self, F) -> Framed<T2, U> where F: Fn(T) -> T2","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Frame`, returning `Frame` with different io.\n","sig":null,"attributes":[{"value":"/ Consume the `Frame`, returning `Frame` with different io.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":5308,"byte_end":5369,"line_start":125,"line_end":125,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":5749,"byte_end":5763,"line_start":140,"line_end":140,"column_start":12,"column_end":26},"name":"into_map_codec","qualname":"<Framed<T, U>>::into_map_codec","value":"pub fn into_map_codec<F, U2>(Self, F) -> Framed<T, U2> where F: Fn(U) -> U2","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Frame`, returning `Frame` with different codec.\n","sig":null,"attributes":[{"value":"/ Consume the `Frame`, returning `Frame` with different codec.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":5673,"byte_end":5737,"line_start":139,"line_end":139,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":6132,"byte_end":6137,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"write","qualname":"<Framed<T, U>>::write","value":"pub fn write<I>(Pin<&mut Self>, I) -> Result<(), <U as Encoder<I>>::Error>\nwhere T: AsyncWrite, U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Serialize item and Write to the inner buffer\n","sig":null,"attributes":[{"value":"/ Serialize item and Write to the inner buffer","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":6072,"byte_end":6120,"line_start":155,"line_end":155,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":6629,"byte_end":6638,"line_start":172,"line_end":172,"column_start":12,"column_end":21},"name":"next_item","qualname":"<Framed<T, U>>::next_item","value":"pub fn next_item(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<<U as Decoder>::Item, U::Error>>> where T: AsyncRead,\nU: Decoder","parent":null,"children":[],"decl_id":null,"docs":" Try to read underlying I/O stream and decode item.\n","sig":null,"attributes":[{"value":"/ Try to read underlying I/O stream and decode item.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":6563,"byte_end":6617,"line_start":171,"line_end":171,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":9009,"byte_end":9014,"line_start":232,"line_end":232,"column_start":12,"column_end":17},"name":"flush","qualname":"<Framed<T, U>>::flush","value":"pub fn flush<I>(Pin<&mut Self>, &mut Context) -> Poll<Result<(), U::Error>>\nwhere T: AsyncWrite, U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Flush write buffer to underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Flush write buffer to underlying I/O stream.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":8949,"byte_end":8997,"line_start":231,"line_end":231,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":10045,"byte_end":10050,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"close","qualname":"<Framed<T, U>>::close","value":"pub fn close<I>(Pin<&mut Self>, &mut Context) -> Poll<Result<(), U::Error>>\nwhere T: AsyncWrite, U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Flush write buffer and shutdown underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Flush write buffer and shutdown underlying I/O stream.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":9975,"byte_end":10033,"line_start":267,"line_end":267,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":12139,"byte_end":12149,"line_start":344,"line_end":344,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" This function returns a *single* object that is both `Stream` and `Sink`; grouping this into\n a single object is often useful for layering things like gzip or TLS, which require both\n read and write access to the underlying object.","sig":null,"attributes":[{"value":"/ This function returns a *single* object that is both `Stream` and `Sink`; grouping this into","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":11706,"byte_end":11802,"line_start":338,"line_end":338,"column_start":5,"column_end":101}},{"value":"/ a single object is often useful for layering things like gzip or TLS, which require both","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":11807,"byte_end":11899,"line_start":339,"line_end":339,"column_start":5,"column_end":97}},{"value":"/ read and write access to the underlying object.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":11904,"byte_end":11955,"line_start":340,"line_end":340,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":11960,"byte_end":11963,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ These objects take a stream, a read buffer and a write buffer. These fields can be obtained","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":11968,"byte_end":12063,"line_start":342,"line_end":342,"column_start":5,"column_end":100}},{"value":"/ from an existing `Framed` with the `into_parts` method.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":12068,"byte_end":12127,"line_start":343,"line_end":343,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":12713,"byte_end":12723,"line_start":359,"line_end":359,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream, the buffer with unprocessed data,\n and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream, the buffer with unprocessed data,","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":12400,"byte_end":12496,"line_start":354,"line_end":354,"column_start":5,"column_end":101}},{"value":"/ and the codec.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":12501,"byte_end":12519,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":12524,"byte_end":12527,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream of data coming in as","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":12532,"byte_end":12628,"line_start":357,"line_end":357,"column_start":5,"column_end":101}},{"value":"/ it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":12633,"byte_end":12701,"line_start":358,"line_end":358,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13193,"byte_end":13204,"line_start":375,"line_end":375,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":12957,"byte_end":13028,"line_start":370,"line_end":370,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13029,"byte_end":13032,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ It can be used to construct a new `Framed` with a different codec. It contains all current","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13033,"byte_end":13127,"line_start":372,"line_end":372,"column_start":1,"column_end":95}},{"value":"/ buffers and the inner transport.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13128,"byte_end":13164,"line_start":373,"line_end":373,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":373},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13291,"byte_end":13293,"line_start":377,"line_end":377,"column_start":9,"column_end":11},"name":"io","qualname":"::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to.\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13217,"byte_end":13282,"line_start":376,"line_end":376,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":374},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13333,"byte_end":13338,"line_start":380,"line_end":380,"column_start":9,"column_end":14},"name":"codec","qualname":"::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" The codec object.\n","sig":null,"attributes":[{"value":"/ The codec object.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13303,"byte_end":13324,"line_start":379,"line_end":379,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":375},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13403,"byte_end":13411,"line_start":383,"line_end":383,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13348,"byte_end":13394,"line_start":382,"line_end":382,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":376},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13498,"byte_end":13507,"line_start":386,"line_end":386,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13428,"byte_end":13489,"line_start":385,"line_end":385,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13628,"byte_end":13631,"line_start":393,"line_end":393,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new(T, U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new default `FramedParts`.\n","sig":null,"attributes":[{"value":"/ Creates a new default `FramedParts`.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13576,"byte_end":13616,"line_start":392,"line_end":392,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13925,"byte_end":13938,"line_start":404,"line_end":404,"column_start":12,"column_end":25},"name":"with_read_buf","qualname":"<FramedParts<T, U>>::with_read_buf","value":"pub fn with_read_buf(T, U, BytesMut) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedParts` with read buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedParts` with read buffer.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13864,"byte_end":13913,"line_start":403,"line_end":403,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lines.rs","byte_start":14533,"byte_end":14543,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::lines::LinesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" Lines codec. Reads/writes line delimited strings.","sig":null,"attributes":[{"value":"/ Lines codec. Reads/writes line delimited strings.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lines.rs","byte_start":14282,"byte_end":14335,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lines.rs","byte_start":14336,"byte_end":14339,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Will split input up by LF or CRLF delimiters. I.e. carriage return characters at the end of","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lines.rs","byte_start":14340,"byte_end":14435,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ lines are not preserved.","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lines.rs","byte_start":14436,"byte_end":14464,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lines.rs","byte_start":14504,"byte_end":14521,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/bcodec.rs","byte_start":1047,"byte_end":1057,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/bcodec.rs","byte_start":1276,"byte_end":1286,"line_start":21,"line_end":21,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":2722,"byte_end":2728,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3314,"byte_end":3320,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":6053,"byte_end":6059,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":10427,"byte_end":10433,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":10679,"byte_end":10685,"line_start":295,"line_end":295,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":11414,"byte_end":11420,"line_start":324,"line_end":324,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":11687,"byte_end":11693,"line_start":337,"line_end":337,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13552,"byte_end":13563,"line_start":391,"line_end":391,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lines.rs","byte_start":14581,"byte_end":14591,"line_start":16,"line_end":16,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lines.rs","byte_start":14899,"byte_end":14909,"line_start":29,"line_end":29,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/bcodec.rs","byte_start":1047,"byte_end":1057,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":214},"to":{"krate":38,"index":579}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/bcodec.rs","byte_start":1276,"byte_end":1286,"line_start":21,"line_end":21,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":214},"to":{"krate":38,"index":562}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":2722,"byte_end":2728,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":3314,"byte_end":3320,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":6053,"byte_end":6059,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":10427,"byte_end":10433,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":313},"to":{"krate":19,"index":96}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":10679,"byte_end":10685,"line_start":295,"line_end":295,"column_start":27,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":313},"to":{"krate":20,"index":17}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":11414,"byte_end":11420,"line_start":324,"line_end":324,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":9345}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":11687,"byte_end":11693,"line_start":337,"line_end":337,"column_start":12,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/framed.rs","byte_start":13552,"byte_end":13563,"line_start":391,"line_end":391,"column_start":12,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lines.rs","byte_start":14581,"byte_end":14591,"line_start":16,"line_end":16,"column_start":36,"column_end":46},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":382},"to":{"krate":38,"index":579}},{"span":{"file_name":"/Users/idealmine/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.4.1/src/lines.rs","byte_start":14899,"byte_end":14909,"line_start":29,"line_end":29,"column_start":18,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":382},"to":{"krate":38,"index":562}}]}